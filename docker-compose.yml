services:
  postgres:
    image: postgres:16-alpine
    container_name: skydive-postgres
    environment:
      POSTGRES_DB: skydive_forecast_user_db
      POSTGRES_USER: skydive_forecast_user
      POSTGRES_PASSWORD: pass
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U skydive_forecast_user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: skydive-redis
    command: redis-server --requirepass pass
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data

  app:
    build: .
    container_name: skydive-app
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/skydive_forecast_user_db
      SPRING_DATASOURCE_USERNAME: skydive_forecast_user
      SPRING_DATASOURCE_PASSWORD: pass
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      SPRING_DATA_REDIS_PASSWORD: pass
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    restart: unless-stopped

volumes:
  postgres-data:
  redis-data:
